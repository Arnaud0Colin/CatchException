//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LogTrace.CatchException.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CatchException.Service.ICatchException")]
    public interface ICatchException {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/WriteInJournal", ReplyAction="http://tempuri.org/ICatchException/WriteInJournalResponse")]
        void WriteInJournal(string Ordi, int App, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/WriteInJournal", ReplyAction="http://tempuri.org/ICatchException/WriteInJournalResponse")]
        System.Threading.Tasks.Task WriteInJournalAsync(string Ordi, int App, string xml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatchExceptionChannel : LogTrace.CatchException.Service.ICatchException, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatchExceptionClient : System.ServiceModel.ClientBase<LogTrace.CatchException.Service.ICatchException>, LogTrace.CatchException.Service.ICatchException {
        
        public CatchExceptionClient() {
        }
        
        public CatchExceptionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatchExceptionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatchExceptionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatchExceptionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void WriteInJournal(string Ordi, int App, string xml) {
            base.Channel.WriteInJournal(Ordi, App, xml);
        }
        
        public System.Threading.Tasks.Task WriteInJournalAsync(string Ordi, int App, string xml) {
            return base.Channel.WriteInJournalAsync(Ordi, App, xml);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CatchException.WebCatchException {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICatchException", Namespace="http://tempuri.org/")]
    public partial class CatchException : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CatchMeOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteInJournalOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CatchException() {
            this.Url = null;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CatchMeCompletedEventHandler CatchMeCompleted;
        
        /// <remarks/>
        public event WriteInJournalCompletedEventHandler WriteInJournalCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICatchException/CatchMe", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CatchMe([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] MyException Exception) {
            this.Invoke("CatchMe", new object[] {
                        Exception});
        }
        
        /// <remarks/>
        public void CatchMeAsync(MyException Exception) {
            this.CatchMeAsync(Exception, null);
        }
        
        /// <remarks/>
        public void CatchMeAsync(MyException Exception, object userState) {
            if ((this.CatchMeOperationCompleted == null)) {
                this.CatchMeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCatchMeOperationCompleted);
            }
            this.InvokeAsync("CatchMe", new object[] {
                        Exception}, this.CatchMeOperationCompleted, userState);
        }
        
        private void OnCatchMeOperationCompleted(object arg) {
            if ((this.CatchMeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CatchMeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ICatchException/WriteInJournal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void WriteInJournal([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Ordi, int App, [System.Xml.Serialization.XmlIgnoreAttribute()] bool AppSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string xml) {
            this.Invoke("WriteInJournal", new object[] {
                        Ordi,
                        App,
                        AppSpecified,
                        xml});
        }
        
        /// <remarks/>
        public void WriteInJournalAsync(string Ordi, int App, bool AppSpecified, string xml) {
            this.WriteInJournalAsync(Ordi, App, AppSpecified, xml, null);
        }
        
        /// <remarks/>
        public void WriteInJournalAsync(string Ordi, int App, bool AppSpecified, string xml, object userState) {
            if ((this.WriteInJournalOperationCompleted == null)) {
                this.WriteInJournalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteInJournalOperationCompleted);
            }
            this.InvokeAsync("WriteInJournal", new object[] {
                        Ordi,
                        App,
                        AppSpecified,
                        xml}, this.WriteInJournalOperationCompleted, userState);
        }
        
        private void OnWriteInJournalOperationCompleted(object arg) {
            if ((this.WriteInJournalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteInJournalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    public partial class MyException {
        
        private System.Nullable<int> applicationIdField;
        
        private bool applicationIdFieldSpecified;
        
        private string computerNameField;
        
        private string currentPathField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private bool debugField;
        
        private bool debugFieldSpecified;
        
        private string loginField;
        
        private string methodField;
        
        private string osPlatformField;
        
        private string osServicePackField;
        
        private string osVersionField;
        
        private string pathField;
        
        private string processNameField;
        
        private string programField;
        
        private byte[] sIDField;
        
        private string typeField;
        
        private System.Nullable<ushort> urgenceLevelField;
        
        private bool urgenceLevelFieldSpecified;
        
        private string versionField;
        
        private MyExceptionDetail[] _ExcepField;
        
        private ElVar[] _VarField;
        
        private string bitmapField;
        
        private string sourceFilePathField;
        
        private int sourceLineNumberField;
        
        private bool sourceLineNumberFieldSpecified;



        [ReadOnly(true)]
        [XmlElement("ApplicationId")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ApplicationIdString
        {
            get
            {
                return ApplicationId.HasValue ? $"{ApplicationId}" : null;
            }
            set { }
        }

        /// <remarks/>
        [XmlIgnore]
        /// <remarks/>
      //  [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ApplicationId {
            get {
                return this.applicationIdField;
            }
            set {
                this.applicationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApplicationIdSpecified {
            get {
                return this.applicationIdFieldSpecified;
            }
            set {
                this.applicationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrentPath {
            get {
                return this.currentPathField;
            }
            set {
                this.currentPathField = value;
            }
        }


        [ReadOnly(true)]
        [XmlElement("Date")]
        public string DateString
        {
            get
            {
                return $"{this.dateField:O}";
            }
            set { }
        }

        /// <remarks/>
        [XmlIgnore]
        public System.DateTime Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }


        [ReadOnly(true)]
        [XmlElement("Debug")]
        public string DebugString
        {
            get
            {
                return $"{(this.debugField? "true" : "false")}";
            }
            set { }
        }

        /// <remarks/>
        [XmlIgnore]
        public bool Debug {
            get {
                return this.debugField;
            }
            set {
                this.debugField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebugSpecified {
            get {
                return this.debugFieldSpecified;
            }
            set {
                this.debugFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OsPlatform {
            get {
                return this.osPlatformField;
            }
            set {
                this.osPlatformField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OsServicePack {
            get {
                return this.osServicePackField;
            }
            set {
                this.osServicePackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OsVersion {
            get {
                return this.osVersionField;
            }
            set {
                this.osVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Program {
            get {
                return this.programField;
            }
            set {
                this.programField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] SID {
            get {
                return this.sIDField;
            }
            set {
                this.sIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }


        [ReadOnly(true)]
        [XmlElement("UrgenceLevel")]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string UrgenceLevelString
        {
            get
            {
                return UrgenceLevel.HasValue ? $"{UrgenceLevel}" : null;
            }
            set { }
        }

        /// <remarks/>
        [XmlIgnore]
        /// <remarks/>
       // [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ushort> UrgenceLevel {
            get {
                return this.urgenceLevelField;
            }
            set {
                this.urgenceLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UrgenceLevelSpecified {
            get {
                return this.urgenceLevelFieldSpecified;
            }
            set {
                this.urgenceLevelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public MyExceptionDetail[] _Excep {
            get {
                return this._ExcepField;
            }
            set {
                this._ExcepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ElVar[] _Var {
            get {
                return this._VarField;
            }
            set {
                this._VarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bitmap {
            get {
                return this.bitmapField;
            }
            set {
                this.bitmapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sourceFilePath {
            get {
                return this.sourceFilePathField;
            }
            set {
                this.sourceFilePathField = value;
            }
        }

        [ReadOnly(true)]
        [XmlElement("sourceLineNumber")]
        public string sourceLineNumberString
        {
            get
            {
                return  $"{sourceLineNumberField}";
            }
            set { }
        }

        /// <remarks/>
        [XmlIgnore]
        public int sourceLineNumber {
            get {
                return this.sourceLineNumberField;
            }
            set {
                this.sourceLineNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sourceLineNumberSpecified {
            get {
                return this.sourceLineNumberFieldSpecified;
            }
            set {
                this.sourceLineNumberFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    public partial class MyExceptionDetail {
        
        private ElVar[] dataField;
        
        private string exceptionField;
        
        private int hResultField;
        
        private bool hResultFieldSpecified;
        
        private string helpLinkField;
        
        private string messageField;
        
        private string sourceField;
        
        private string stackTraceField;
        
        private string targetSiteField;
        
        private int codeField;
        
        private bool codeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ElVar[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
            }
        }
        
        /// <remarks/>
        public int HResult {
            get {
                return this.hResultField;
            }
            set {
                this.hResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HResultSpecified {
            get {
                return this.hResultFieldSpecified;
            }
            set {
                this.hResultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HelpLink {
            get {
                return this.helpLinkField;
            }
            set {
                this.helpLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TargetSite {
            get {
                return this.targetSiteField;
            }
            set {
                this.targetSiteField = value;
            }
        }
        
        /// <remarks/>
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool codeSpecified {
            get {
                return this.codeFieldSpecified;
            }
            set {
                this.codeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    public partial class ElVar {
        
        private string nameField;
        
        private string typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void CatchMeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void WriteInJournalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591
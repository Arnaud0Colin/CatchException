//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CatchException.WebCatchException {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyException", Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    [System.SerializableAttribute()]
    public partial class MyException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DebugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsPlatformField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsServicePackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OsVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<ushort> UrgenceLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatchException.WebCatchException.MyExceptionDetail[] _ExcepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatchException.WebCatchException.ElVar[] _VarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bitmapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sourceFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sourceLineNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComputerName {
            get {
                return this.ComputerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerNameField, value) != true)) {
                    this.ComputerNameField = value;
                    this.RaisePropertyChanged("ComputerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentPath {
            get {
                return this.CurrentPathField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentPathField, value) != true)) {
                    this.CurrentPathField = value;
                    this.RaisePropertyChanged("CurrentPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Debug {
            get {
                return this.DebugField;
            }
            set {
                if ((this.DebugField.Equals(value) != true)) {
                    this.DebugField = value;
                    this.RaisePropertyChanged("Debug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsPlatform {
            get {
                return this.OsPlatformField;
            }
            set {
                if ((object.ReferenceEquals(this.OsPlatformField, value) != true)) {
                    this.OsPlatformField = value;
                    this.RaisePropertyChanged("OsPlatform");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsServicePack {
            get {
                return this.OsServicePackField;
            }
            set {
                if ((object.ReferenceEquals(this.OsServicePackField, value) != true)) {
                    this.OsServicePackField = value;
                    this.RaisePropertyChanged("OsServicePack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OsVersion {
            get {
                return this.OsVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.OsVersionField, value) != true)) {
                    this.OsVersionField = value;
                    this.RaisePropertyChanged("OsVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Program {
            get {
                return this.ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramField, value) != true)) {
                    this.ProgramField = value;
                    this.RaisePropertyChanged("Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SID {
            get {
                return this.SIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SIDField, value) != true)) {
                    this.SIDField = value;
                    this.RaisePropertyChanged("SID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<ushort> UrgenceLevel {
            get {
                return this.UrgenceLevelField;
            }
            set {
                if ((this.UrgenceLevelField.Equals(value) != true)) {
                    this.UrgenceLevelField = value;
                    this.RaisePropertyChanged("UrgenceLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatchException.WebCatchException.MyExceptionDetail[] _Excep {
            get {
                return this._ExcepField;
            }
            set {
                if ((object.ReferenceEquals(this._ExcepField, value) != true)) {
                    this._ExcepField = value;
                    this.RaisePropertyChanged("_Excep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatchException.WebCatchException.ElVar[] _Var {
            get {
                return this._VarField;
            }
            set {
                if ((object.ReferenceEquals(this._VarField, value) != true)) {
                    this._VarField = value;
                    this.RaisePropertyChanged("_Var");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bitmap {
            get {
                return this.bitmapField;
            }
            set {
                if ((object.ReferenceEquals(this.bitmapField, value) != true)) {
                    this.bitmapField = value;
                    this.RaisePropertyChanged("bitmap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sourceFilePath {
            get {
                return this.sourceFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.sourceFilePathField, value) != true)) {
                    this.sourceFilePathField = value;
                    this.RaisePropertyChanged("sourceFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sourceLineNumber {
            get {
                return this.sourceLineNumberField;
            }
            set {
                if ((this.sourceLineNumberField.Equals(value) != true)) {
                    this.sourceLineNumberField = value;
                    this.RaisePropertyChanged("sourceLineNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyExceptionDetail", Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    [System.SerializableAttribute()]
    public partial class MyExceptionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CatchException.WebCatchException.ElVar[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HelpLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int codeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CatchException.WebCatchException.ElVar[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HResult {
            get {
                return this.HResultField;
            }
            set {
                if ((this.HResultField.Equals(value) != true)) {
                    this.HResultField = value;
                    this.RaisePropertyChanged("HResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpLink {
            get {
                return this.HelpLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.HelpLinkField, value) != true)) {
                    this.HelpLinkField = value;
                    this.RaisePropertyChanged("HelpLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetSite {
            get {
                return this.TargetSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetSiteField, value) != true)) {
                    this.TargetSiteField = value;
                    this.RaisePropertyChanged("TargetSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int code {
            get {
                return this.codeField;
            }
            set {
                if ((this.codeField.Equals(value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElVar", Namespace="http://schemas.datacontract.org/2004/07/WebCatchException")]
    [System.SerializableAttribute()]
    public partial class ElVar : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebCatchException.ICatchException")]
    public interface ICatchException {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/CatchMe", ReplyAction="http://tempuri.org/ICatchException/CatchMeResponse")]
        void CatchMe(CatchException.WebCatchException.MyException Exception);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/CatchMe", ReplyAction="http://tempuri.org/ICatchException/CatchMeResponse")]
        System.Threading.Tasks.Task CatchMeAsync(CatchException.WebCatchException.MyException Exception);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/WriteInJournal", ReplyAction="http://tempuri.org/ICatchException/WriteInJournalResponse")]
        void WriteInJournal(string Ordi, int App, string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICatchException/WriteInJournal", ReplyAction="http://tempuri.org/ICatchException/WriteInJournalResponse")]
        System.Threading.Tasks.Task WriteInJournalAsync(string Ordi, int App, string xml);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICatchExceptionChannel : CatchException.WebCatchException.ICatchException, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CatchExceptionClient : System.ServiceModel.ClientBase<CatchException.WebCatchException.ICatchException>, CatchException.WebCatchException.ICatchException {
        
        public CatchExceptionClient() {
        }
        
        public CatchExceptionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CatchExceptionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatchExceptionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CatchExceptionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CatchMe(CatchException.WebCatchException.MyException Exception) {
            base.Channel.CatchMe(Exception);
        }
        
        public System.Threading.Tasks.Task CatchMeAsync(CatchException.WebCatchException.MyException Exception) {
            return base.Channel.CatchMeAsync(Exception);
        }
        
        public void WriteInJournal(string Ordi, int App, string xml) {
            base.Channel.WriteInJournal(Ordi, App, xml);
        }
        
        public System.Threading.Tasks.Task WriteInJournalAsync(string Ordi, int App, string xml) {
            return base.Channel.WriteInJournalAsync(Ordi, App, xml);
        }
    }
}
